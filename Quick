import random
import time

def partition(arr, low, high):
    pivot = arr[high]
    i = low - 1

    for j in range(low, high):
        if arr[j] < pivot:
            i += 1
            arr[i], arr[j] = arr[j], arr[i]

    arr[i + 1], arr[high] = arr[high], arr[i + 1]
    return i + 1

def randomized_partition(arr, low, high):
    pivot_index = random.randint(low, high)
    arr[pivot_index], arr[high] = arr[high], arr[pivot_index]
    return partition(arr, low, high)

def quick_sort(arr, low, high):
    if low < high:
        pivot_index = randomized_partition(arr, low, high)
        quick_sort(arr, low, pivot_index - 1)
        quick_sort(arr, pivot_index + 1, high)

def measure_sort_time(arr):
    start_time = time.time()
    quick_sort(arr, 0, len(arr) - 1)
    end_time = time.time()
    return end_time - start_time

if __name__ == "__main__":
    arr_sizes = [100, 1000, 5000]

    for size in arr_sizes:
        arr = list(range(size, 0, -1))  # Reverse-sorted array

        time_taken = measure_sort_time(arr.copy())
        
        print(f"Array size: {size}")
        print(f"Randomized Quick Sort time: {time_taken:.6f} seconds")
        print("-" * 40)
